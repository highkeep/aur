name: template_aur

on:
  workflow_call:
    inputs:
      repo_url:
        required: true
        type: string
      repo_pkg:
        required: true
        type: string
      build_arch:
        type: string
      makepkgArgs:
        type: string
      multilib:
        type: boolean
        default: false
      nvidiaUtils:
        type: boolean
        default: false
      ref:
        type: string
        default: main
  workflow_dispatch:
    inputs:
      repo_url:
        required: true
        type: string
      repo_pkg:
        required: true
        type: string
      build_arch:
        type: string
      makepkgArgs:
        type: string
      multilib:
        type: boolean
        default: false
      nvidiaUtils:
        type: boolean
        default: false

jobs:
  arch:
    runs-on: ubuntu-latest
    outputs:
      build_arch: ${{ steps.get_arch.outputs.build_arch }}
    steps:
      - name: Get Arch
        id: get_arch
        run: |
          input=${{ github.event.inputs.build_arch }}

          if [ ! -z ${input} ]; then
            echo "build_arch=${input} }}" >> $GITHUB_OUTPUT
          else
            case ${{ inputs.ref }} in
              main)
                echo "build_arch=alderlake" >> $GITHUB_OUTPUT
                ;;
              generic)
                echo "build_arch=generic_x86_64" >> $GITHUB_OUTPUT
                ;;
              *)
                exit 1
                ;;
            esac
          fi
  check:
    runs-on: ubuntu-latest
    needs: arch
    outputs:
      status: ${{ steps.update.outputs.update }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.ref }}
    - name: Compare Package
      id: update
      run: |
        source functions.sh && echo $(checkGitVersion ${{ inputs.repo_url }} ${{ inputs.repo_pkg }}) >> $GITHUB_OUTPUT
  package: 
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.status == 'true' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.ref }}
    - name: Clone Package
      run: |
        git clone ${{ inputs.repo_url }}/${{ inputs.repo_pkg }}.git
    - name: Swap in ${{ needs.arch.outputs.build_arch }}
      run: |
        sed -i 's/=nocona/=${{ needs.arch.outputs.build_arch }}/g;s/=core-avx2/=${{ needs.arch.outputs.build_arch }}/g' ${{ inputs.repo_pkg }}/PKGBUILD
    - name: Makepkg Build and Check
      id: makepkg
      uses: highkeep/pkgbuild-action@master
      with:
        pkgdir: ${{ inputs.repo_pkg }}
        pacmanConf: "configs/${{ needs.arch.outputs.build_arch }}_pacman.conf"
        makepkgConf: "configs/${{ needs.arch.outputs.build_arch }}_makepkg.conf"
        makepkgArgs: ${{ inputs.makepkgArgs }}
        multilib: ${{ inputs.multilib }}
        nvidiaUtils: ${{ inputs.nvidiaUtils }}
        repoReleaseTag: "${{ needs.arch.outputs.build_arch }}"
    - name: Print Package Files
      run: |
        echo "Successfully created the following package archive"
        echo "Package: ${{ steps.makepkg.outputs.pkgfile0 }}"
        echo "Package: ${{ steps.makepkg.outputs.repofile0 }}"
        echo "Package: ${{ steps.makepkg.outputs.repofile1 }}"
        echo "Package: ${{ steps.makepkg.outputs.repofile2 }}"
        echo "Package: ${{ steps.makepkg.outputs.repofile3 }}"
    - uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        tag: ${{ needs.arch.outputs.build_arch }}
        file: ${{ steps.makepkg.outputs.pkgfile0 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        tag: ${{ needs.arch.outputs.build_arch }}
        file: ${{ steps.makepkg.outputs.repofile0 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        tag: ${{ needs.arch.outputs.build_arch }}
        file: ${{ steps.makepkg.outputs.repofile1 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        tag: ${{ needs.arch.outputs.build_arch }}
        file: ${{ steps.makepkg.outputs.repofile2 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        tag: ${{ needs.arch.outputs.build_arch }}
        file: ${{ steps.makepkg.outputs.repofile3 }}
        overwrite: true
    - name: Ignore package folder
      run: | 
        grep /${{ inputs.repo_pkg }} .gitignore >/dev/null || echo /${{ inputs.repo_pkg }} >> .gitignore
    - name: Update version
      run: |
        [ -f versions/${{ inputs.repo_pkg }} ] || touch versions/${{ inputs.repo_pkg }} && git add versions/${{ inputs.repo_pkg }}
        echo `git -C ${{ inputs.repo_pkg }} rev-parse HEAD` > versions/${{ inputs.repo_pkg }}
    - name: Commit changes
      run: |
        git config --global user.name 'Nick Marshall'
        git config --global user.email 'highkeep@users.noreply.github.com'
        git commit -am "Version control"
        git push